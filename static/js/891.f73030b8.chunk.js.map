{"version":3,"file":"static/js/891.f73030b8.chunk.js","mappings":"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","sources":["webpack://Carent/./src/pages/AdminPages/AdminDashboard/adminDashboard.module.css?64f8","pages/AdminPages/AdminDashboard/AdminDashboard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"adminDashboard_section__iMg0b\",\"container\":\"adminDashboard_container__G92Tn\",\"dashboard\":\"adminDashboard_dashboard__fJM29\",\"dashboardStatus\":\"adminDashboard_dashboardStatus__UnDla\",\"statusCardsWrapper\":\"adminDashboard_statusCardsWrapper__wdyCU\",\"statusCard\":\"adminDashboard_statusCard__j1+0E\",\"cardPhoto\":\"adminDashboard_cardPhoto__RVomH\",\"cardInfo\":\"adminDashboard_cardInfo__ipQEz\"};","import { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport css from './adminDashboard.module.css';\nimport lamborghiniImage from '../../../img/labmorghini-image.png';\n\nconst STATUSES = ['New', 'In progress', 'Canceled', 'Confirmed'];\nconst STATUS_COLORS = {\n  New: 'green',\n  'In progress': 'blue',\n  Canceled: 'red',\n  Confirmed: 'purple',\n};\n\nconst Card = ({ request, index }) => {\n  return (\n    <Draggable draggableId={request.id.toString()} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={css.statusCard}\n          style={{\n            ...provided.draggableProps.style,\n            transform: snapshot.isDragging\n              ? provided.draggableProps.style?.transform\n              : 'none',\n            transition: 'transform 0.1s linear, box-shadow 0.2s ease-in-out',\n            boxShadow: snapshot.isDragging\n              ? '0px 10px 20px rgba(0, 0, 0, 0.3)'\n              : 'none',\n            opacity: snapshot.isDragging ? 0.9 : 1,\n          }}\n        >\n          <img\n            src={lamborghiniImage}\n            alt=\"lamborghini\"\n            className={css.cardPhoto}\n          />\n          <div className={css.cardInfo}>\n            <p>\n              <span style={{ color: STATUS_COLORS[request.status] }}>\n                &#9679;\n              </span>{' '}\n              {request.status}\n            </p>\n            <p>{request.name}</p>\n            <p>{request.phone}</p>\n            <p>from: {request.from}</p>\n            <p>to: {request.to}</p>\n            <p>{request.price}$</p>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst StatusColumn = ({ status, requests }) => {\n  return (\n    <Droppable droppableId={status}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={css.dashboardStatus}\n        >\n          <h2>{status}</h2>\n          <div className={css.statusCardsWrapper}>\n            {requests.map((request, index) => (\n              <Card key={request.id} request={request} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst AdminDashboard = () => {\n  const [requests, setRequests] = useState([\n    {\n      id: 1,\n      name: 'Bill Parker',\n      phone: '0993133801',\n      from: '17.10.25',\n      to: '20.10.25',\n      price: 540,\n      status: 'New',\n    },\n    {\n      id: 2,\n      name: 'John Doe',\n      phone: '0993133811',\n      from: '18.10.25',\n      to: '21.10.25',\n      price: 600,\n      status: 'New',\n    },\n  ]);\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n\n    setRequests(prevRequests => {\n      const updatedRequests = [...prevRequests];\n\n      // Знаходимо картку, яку перетягуємо\n      const movedCardIndex = updatedRequests.findIndex(\n        req => req.id.toString() === result.draggableId\n      );\n\n      if (movedCardIndex === -1) return prevRequests; // Якщо не знайдено - повертаємо поточний стан\n\n      // Отримуємо картку та змінюємо її статус\n      const movedCard = { ...updatedRequests[movedCardIndex] };\n      movedCard.status = result.destination.droppableId;\n\n      // Видаляємо картку зі старого місця\n      updatedRequests.splice(movedCardIndex, 1);\n\n      // Додаємо її у новий список (правильна позиція)\n      const destinationIndex = result.destination.index;\n      updatedRequests.splice(destinationIndex, 0, movedCard);\n\n      return updatedRequests;\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className={css.section}>\n        <div className={css.container}>\n          <h1>Dashboard</h1>\n          <div className={css.dashboard}>\n            {STATUSES.map(status => (\n              <StatusColumn\n                key={status}\n                status={status}\n                requests={requests.filter(req => req.status === status)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["STATUSES","STATUS_COLORS","New","Canceled","Confirmed","Card","_ref","request","index","_jsx","Draggable","draggableId","id","toString","children","provided","snapshot","_provided$draggablePr","_jsxs","_objectSpread","ref","innerRef","draggableProps","dragHandleProps","className","css","style","transform","isDragging","transition","boxShadow","opacity","src","lamborghiniImage","alt","color","status","name","phone","from","to","price","StatusColumn","_ref2","requests","Droppable","droppableId","droppableProps","map","placeholder","_useState","useState","_useState2","_slicedToArray","setRequests","DragDropContext","onDragEnd","result","destination","prevRequests","updatedRequests","_toConsumableArray","movedCardIndex","findIndex","req","movedCard","splice","destinationIndex","filter"],"sourceRoot":""}