{"version":3,"file":"static/js/73.1b1ed897.chunk.js","mappings":"iNAEaA,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAU,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAExBC,EAAAA,EAAAA,IAAU,oEAADC,OACsCN,IACpE,KAAD,EAFa,OAARC,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAIPP,EAASQ,MAAI,OAKlB,MALkBP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBS,QAAQC,MAAM,iCAADN,OACsBN,EAAU,cAAAE,EAAAQ,IAE3CR,EAAAQ,GAAA,yBAAAR,EAAAW,OAAA,GAAAd,EAAA,kBAGL,gBAd+Be,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,K,SCwDhC,EAtDoB,WAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,IAEpCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAhC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAE,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXa,EAAG,CAADf,EAAAE,KAAA,eAAAF,EAAAM,OAAA,wBAAAN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBT,EAAoBsB,GAAI,KAAD,EAAxChB,EAAQC,EAAAK,KACdmB,EAAgBzB,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE1BS,QAAQC,MAAM,mCAAkCV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAd,EAAA,kBAE5D,kBARc,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAUfY,GACF,GAAG,CAACX,IAEJ,IAAMY,EAAY,SAAAC,GAChBX,EAAS,YAADb,OAAawB,GACvB,EAGA,OAAKb,GAILN,QAAQoB,IAAIN,IAGVO,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,SAAUC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,cAAYlB,MAChBmB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAAS,kBAAMT,EAAU,EAAE,EAACM,SAAC,OAGnDC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAAS,kBAAMT,EAAU,EAAE,EAACM,SAAC,OAGnDC,EAAAA,EAAAA,KAAA,OAAAD,SACGV,GACCW,EAAAA,EAAAA,KAAA,MAAAD,SACGV,EAAac,KAAI,SAAAC,GAAG,OACnBJ,EAAAA,EAAAA,KAAA,MAAAD,SAAkBK,EAAIC,MAAbD,EAAIvB,GAAmB,OAIpCmB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAtBFC,EAAAA,EAAAA,KAACM,EAAAA,GAAQ,CAACC,GAAG,aAAaC,SAAO,GA2B5C,C","sources":["service/getCarsByCategoryId.js","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getCarsByCategoryId = async categoryId => {\n  try {\n    const response = await axios.get(\n      `https://64fee767f8b9eeca9e294103.mockapi.io/api/cars/?categoryId=${categoryId}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(\n      `Error fetching cars with from ${categoryId} category:`,\n      error\n    );\n    throw error;\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Navigate } from 'react-router-dom';\nimport { getCarsByCategoryId } from 'service/getCarsByCategoryId';\n\nconst CatalogPage = () => {\n  const { id } = useParams(); // id з URL\n  const navigate = useNavigate(); // Хук для перенаправлення\n  const [carsListData, setCarsListData] = useState(null);\n\n  useEffect(() => {\n    const fetchCars = async () => {\n      if (!id) return; // Перевіряємо наявність id\n      try {\n        const response = await getCarsByCategoryId(id);\n        setCarsListData(response);\n      } catch (error) {\n        console.error('Error fetching cars by category:', error);\n      }\n    };\n\n    fetchCars();\n  }, [id]);\n\n  const handleBtn = newId => {\n    navigate(`/catalog/${newId}`); // Перенаправляємо на нову категорію\n  };\n\n  // Якщо `id` відсутній, повертаємо `Navigate` в самому JSX\n  if (!id) {\n    return <Navigate to=\"/catalog/1\" replace />;\n  }\n\n  console.log(carsListData);\n\n  return (\n    <div style={{ paddingTop: '200px' }}>\n      <h1>CATEGORY - {id}</h1>\n      <button type=\"button\" onClick={() => handleBtn(1)}>\n        1\n      </button>\n      <button type=\"button\" onClick={() => handleBtn(2)}>\n        2\n      </button>\n      <div>\n        {carsListData ? (\n          <ul>\n            {carsListData.map(car => (\n              <li key={car.id}>{car.name}</li>\n            ))}\n          </ul>\n        ) : (\n          <p>Loading cars...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["getCarsByCategoryId","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","categoryId","response","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","id","useParams","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","carsListData","setCarsListData","useEffect","fetchCars","handleBtn","newId","log","_jsxs","style","paddingTop","children","_jsx","type","onClick","map","car","name","Navigate","to","replace"],"sourceRoot":""}